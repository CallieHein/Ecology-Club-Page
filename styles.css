/* Global */
body {
    margin: 0;
    background-color: #f4f9f4; /* light, neutral background for readability */
    font-family: Arial, Helvetica, sans-serif;
    color: #1b3b1b;
    line-height: 1.5;
}

/* Header */
.header {
    position: relative;
    width: 100%;
    min-height: 220px;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    color: white;
    background: linear-gradient(rgba(0,0,0,0.25), rgba(0,0,0,0.25)), url('header-background.jpg') center/cover no-repeat;
    text-align: center;
    padding: 2rem 1rem;
}

.header h1 {
    margin: 0.2rem 0;
    font-size: 2.5rem;
    text-shadow: 2px 2px 6px rgba(0,0,0,0.6);
}

.header p {
    margin: 0;
    font-size: 1.1rem;
}

/* Navigation */
nav {
    background: #2e7d32; /* darker green */
    display: flex;
    justify-content: center;
    gap: 1rem;
    padding: 0.5rem 1rem;
}

nav a {
    color: #fff;
    text-decoration: none;
    padding: 0.4rem 0.6rem;
    border-radius: 4px;
}

nav a:hover,
nav a:focus {
    background: rgba(255,255,255,0.08);
}

/* Main content */
main {
    max-width: 900px;
    margin: 1.5rem auto;
    padding: 0 1rem;
    background: #fff;
    border-radius: 8px;
    box-shadow: 0 2px 6px rgba(0,0,0,0.08);
}

section {
    padding: 1rem 0;
    border-bottom: 1px solid #eef5ee;
}

section:last-of-type {
    border-bottom: none;
}

h2 {
    color: #165b16;
}

/* Footer */
footer {
    text-align: center;
    padding: 1rem;
    color: #fff;
    background: #165b16;
}

/* Utility */
.sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0,0,0,0);
    white-space: nowrap;
    border: 0;
}

/* -----------------------------
   Responsive utilities & breakpoints
   Demonstrates rem/em/% sizing and media queries
   ----------------------------- */
:root {
    /* Base sizing for rem calculations. Users can scale entire UI by changing this. */
    font-size: 16px;
}

/* Override a few sizes using rem so they scale with the base */
body {
    /* keep other body rules, just ensure rem-based scaling works */
    font-size: 1rem; /* 16px at root */
}

.header {
    /* use rem for height so it scales with font-size */
    min-height: 13.75rem; /* 220px / 16 = 13.75rem */
}

.header h1 { font-size: 2.25rem; }
.header p  { font-size: 1rem; }

main { max-width: 56.25rem; /* 900px */ }

/* Responsive image demo (percentage + max-width) */
.responsive-img {
    display: block;
    width: 100%;      /* percentage sizing â€” fills container */
    max-width: 60rem; /* caps growth on large screens */
    height: auto;
    margin: 1rem auto 0.5rem auto;
    border-radius: 0.5rem;
}

figure { margin: 0.75rem 0 0.5rem 0; padding: 0 0.5rem; text-align: center; color: #315d31; }
figcaption { font-size: 0.875rem; color: #4b6b4b; margin-top: 0.5rem; }

/* Mobile-first breakpoints */
@media (min-width: 40rem) { /* ~640px */
    .header h1 { font-size: 2.75rem; }
    .header { padding: 2.5rem 1.5rem; }
    nav { gap: 1.25rem; }
    .responsive-img { width: 80%; } /* images use percent widths at tablet */
}

@media (min-width: 64rem) { /* ~1024px */
    /* Slightly increase root font sizing for readability on large displays */
    :root { font-size: 18px; }
    /* Keep sections vertical but increase padding on wide screens */
    main { padding: 2rem; }
    .responsive-img { width: 60%; }
    nav { justify-content: flex-start; padding: 0.75rem 2rem; }
}

/* Multimedia grid inside About section */
.multimedia-grid {
    display: flex;
    flex-wrap: wrap;
    gap: 0.75rem; /* uses rem for spacing */
    margin-top: 1rem;
    justify-content: center;
}

.media-item {
    background: #f9fff9;
    border: 1px solid #e6f1e6;
    border-radius: 0.5rem;
    padding: 0.5rem;
    flex: 1 1 14rem; /* flexible items, min width ~14rem */
    max-width: 22rem; /* prevents items getting excessively wide */
    box-shadow: 0 1px 3px rgba(0,0,0,0.04);
}

.responsive-media {
    width: 100%;
    height: auto;
    border-radius: 0.375rem;
}

/* Breakpoints for grid columns */
@media (min-width: 40rem) { /* ~640px -> two columns when items can fit */
    .media-item { flex: 1 1 calc(50% - 0.75rem); max-width: calc(50% - 0.75rem); }
}

@media (min-width: 64rem) { /* ~1024px -> up to 4 columns depending on space */
    .media-item { flex: 1 1 calc(25% - 0.75rem); max-width: calc(25% - 0.75rem); }
}